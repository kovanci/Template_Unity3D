# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules

root = true

[*]
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true
charset = utf-8

[*.md]
indent_size = 2

[*.cs]
###############################
# .NET Coding Conventions     #
###############################
# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Avoid "this."
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# Naming Conventions          #
###############################
# [Public] members must be capitalized
dotnet_naming_rule.public_members_must_be_capitalized.severity              = warning
dotnet_naming_rule.public_members_must_be_capitalized.symbols               = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style                 = first_word_upper_case_style
dotnet_naming_symbols.public_symbols.applicable_kinds                       = property,method,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities             = public
dotnet_naming_style.first_word_upper_case_style.capitalization              = first_word_upper

# [Non-Public] members should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity          = warning
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols           = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style             = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds              = property,field,event,delegate
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities    = internal,private,protected
dotnet_naming_style.camel_case_underscore_style.required_prefix             = _
dotnet_naming_style.camel_case_underscore_style.capitalization              = camel_case

# [Static] field and properties should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity                = warning
dotnet_naming_rule.static_fields_should_have_prefix.symbols                 = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style                   = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds                        = field,property
dotnet_naming_symbols.static_fields.required_modifiers                      = static
dotnet_naming_symbols.static_fields.applicable_accessibilities              = private,internal,private_protected
dotnet_naming_style.static_prefix_style.required_prefix                     = s_
dotnet_naming_style.static_prefix_style.capitalization                      = camel_case

# [Constant] fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity           = warning
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols            = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style              = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds                      = field
dotnet_naming_symbols.constant_fields.required_modifiers                    = const
dotnet_naming_style.pascal_case_style.capitalization                        = pascal_case

# [Locals] and [parameters] are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity                     = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols                      = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style                        = camel_case_style
dotnet_naming_symbols.locals_and_parameters.applicable_kinds                = parameter,local
dotnet_naming_style.camel_case_style.capitalization                         = camel_case

# [Local functions] are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity           = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols            = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style              = local_function_style
dotnet_naming_symbols.local_functions.applicable_kinds                      = local_function
dotnet_naming_style.local_function_style.capitalization                     = pascal_case

###############################
# C# Coding Conventions       #
###############################
# var usage
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

###############################
# C# Formatting Rules         #
###############################
# New line
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

# Braces
csharp_prefer_braces = true:warning

###############################
# Diagnostics                 #
###############################
# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning

# IDE0052: Remove unread private member
dotnet_diagnostic.IDE0052.severity = warning

# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.IDE0059.severity = warning

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = warning

# CA1822: Make member static
dotnet_diagnostic.CA1822.severity = warning
